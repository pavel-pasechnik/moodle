services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${MOODLE_DB_NAME}
      POSTGRES_USER: ${MOODLE_DB_USER}
      POSTGRES_PASSWORD: ${MOODLE_DB_PASS}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"

  moodle:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    entrypoint: ["/usr/local/bin/setup.sh"]
    restart: always
    depends_on:
      - redis
      - elasticsearch
    ports:
      - "8080:80"
    environment:
      MOODLE_DBTYPE: pgsql
      MOODLE_DBHOST: ${MOODLE_DB_HOST}
      MOODLE_DBNAME: ${MOODLE_DB_NAME}
      MOODLE_DBUSER: ${MOODLE_DB_USER}
      MOODLE_DBPASS: ${MOODLE_DB_PASS}
      REDIS_HOST: redis
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
      MOODLE_VERSION: 4.5.7
      TZ: ${TZ}
      MOODLE_URL: ${MOODLE_URL}
    volumes:
      - ~/.ssh:/root/.ssh:ro
      - ./config/php.ini:/usr/local/etc/php/php.ini:ro
      - ./scripts/setup.sh:/usr/local/bin/setup.sh
    dns:
      - 8.8.8.8
      - 1.1.1.1

volumes:
  pgdata:
